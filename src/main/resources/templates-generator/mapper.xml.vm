<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${package.Entity}.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

#end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.commonFields})
        ${field.name},
#end
        ${table.fieldNames}
    </sql>
#end

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ${table.name}
        where ${table.fields[0].columnName} = #{${table.fields[0].propertyName}}
    </select>

    <select id="selectList" parameterType="${package.Entity}.${entity}" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ${table.name}
        <trim prefix="WHERE" prefixOverrides="AND | OR">
#foreach($field in ${table.fields})
            <if test="${field.propertyName} != null #if(${field.columnType.type}=="String") and ${field.propertyName} != ''#end">
                and ${field.columnName} = #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}
            </if>
#end
        </trim>
    </select>

    <insert id="insert" parameterType="${package.Entity}.${entity}">
        insert into ${table.name}(
            ${table.fieldNames}
            )
        values(
#foreach($field in ${table.fields})
            #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if($foreach.count!=${table.fields.size()}),#end
#end
            )
    </insert>

    <insert id="insertSelective" parameterType="${package.Entity}.${entity}">
        insert into ${table.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($field in ${table.fields})
            <if test="${field.propertyName} != null#if(${field.columnType.type}=="String") and ${field.propertyName} != ''#end">
                ${field.columnName},
            </if>
#end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($field in ${table.fields})
            <if test="${field.propertyName} != null#if(${field.columnType.type}=="String") and ${field.propertyName} != ''#end">
                #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}},
            </if>
#end
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="${package.Entity}.${entity}">
        update ${table.name}
        <set>
#foreach($field in ${table.fields})
#if(!${field.keyFlag})
            <if test="${field.propertyName} != null#if(${field.columnType.type}=="String") and ${field.propertyName} != ''#end">
                ${field.columnName} = #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}},
            </if>
#end
#end
        </set>
        where ${table.fields[0].columnName} = #{${table.fields[0].propertyName}}
    </update>

    <update id="updateByPrimaryKey" parameterType="${package.Entity}.${entity}">
        update ${table.name}
        set
#foreach($field in ${table.fields})
#if(!${field.keyFlag})
            ${field.columnName} = #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if($foreach.count!=${table.fields.size()}),#end
#end
#end
        where ${table.fields[0].columnName} = #{${table.fields[0].propertyName}}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from ${table.name}
        where ${table.fields[0].columnName} = #{${table.fields[0].propertyName}}
    </delete>
</mapper>